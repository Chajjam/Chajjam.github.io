---
title: "Computer Architecture Day 1"
date: 2021-06-19 -0400
categories: computer_architecture
---

Reference : Computer Organization and Design 5th edition

**$ Chapter 1 Computer Abstractions and Technology $**


**1.1 Introduction**

3 different classes of copmuting applications:
- Personal computers (PCs) ---> Personal mobile device (PMD)
- Servers                  ---> Cloud computing
- Embedded computers


**1.2 Eight Great Ideas in Computer Architecture**

1) Design for Moore's Law (Graph)
  Moore's Law : integrated circuit resources double every 18-24 months
  Computer architects must anticipate where the technology will be when the design finshes, not when it starts
  
2) Use Abstraction to Simply Design (Picasso)
  Use abstractions to represent the design effectively
  
3) Make the Common Case Fast (Car)
  Enhance performance better than optimizing the rare case, and is also simpler

4) Performance via Parallism (Airplane)
  Designs that get more performance by performing operations in parallel
  
5) Performance via Pipelining (Pipe)
  Pipelining : a particular pattern of parallelism

6) Performance via Prediction (Crystall Ball)
  Sometimes it is faster if recoverable and relatively accurate
  
7) Hierarchy of Memories (Pyramid)

8) Dependability via Redundancy (Truck)
  Make systems dependable by including redundant components that can take over when a failure occurs and to help detect failures


**1.3 Below Your Program**

Hierarchy of software : (Lowest) Hardware -> Systems Software -> Applications Software

Two important types of systems software : Operating System & Compiler
- OS : interfaces between a user's program and hardware.
       Provide many services and supervisory functions
       Important funcionts:
        - Handling basic input and output operations
        - Allocating storage and memory
        - Providing for protected sharing of the computer among multiple applications using it simultaneously
- Compilers : translate a program written in high-level languages into instructions that hardware can execute

- The easiest signals for computers are on and off: 0 and 1 => binary numbers
- Instructions are collections of bits that our computer understands and obeys
  ex) 1000110010100000 tells a computer to add two numbers
- first used binary numbers (tedious)
  => invented noations and translated them to binary by hand (less, but still tedious)
  => invented a program to translate symbolic notation to binary; i.e. assember!
     ex) the programmer writes    :   add A,B           (assembly language)
         the assember translates  :   1000110010100000  (machine language)
  => now high-level prgramming languages and compilers : instructions to instructions
     ex) A + B -> add A,B -> 1000110010100000
     benefits:
      - programmers can think in a more natural language
      - languages can be designed according to their intended use
        ex) Fortran for scientific computation, Cobol for business data processing, Lisp for symbol manipulation
      - improved programmer productivity
      - allows programs to be independent of the computer on which they were developed
        (because compilers and assemblers translate to the binary!)


**1.4 Under the Covers**

Basic functions of the hardware: inputting, outputting, processing, storing data
5 key components of a computer that performs the basic functions:
1) input
2) output
3) memory
4) datapath (called the processor with control)
5) control  (called the processor with datapath)

-------------------------------------------

* Vocab
  
- Personal computers (PCs)
  : a computer for an individual, usually with a graphic display, a keyboard, and a mouse

- Server
  : a computer for larger programs and accessed only via a network
 
- Embedded computers
  : a computer inside another device and used for running a single or a collection of software
  
- Personal mobile device (PMD)
  : small, wireless devices to connect to the Internet (ex: smart phones, tablets)
  
- Cloud Computing
  : larger collections of servers that provide services over the Internet. Relies on giant datacenters known as Warehouse Scale Copmuters (WSCs)
  
- Software as a service (SaaS)
  : delivers software and data as a service over the Internet (ex: web search, social networking)
  
- Systems Software
  : Software that provides services that are commonly useful like operating systems, compilers, loaders, assemblers...

- Operating System
  : Supervising program that manages the resources of a computer for the benefit of the programs that run on that computer
  
- Compiler
  : A program that translates high-level language statements into assembly language statements

- Binary Digit (bit)
  : one of the two numbers in base 2 (0 or 1) that are the components of information

- Instruction
  : A command that computer hardware understands and obeys

- Assembler
  : A program that translates a symbolic version of instructions into the binary version

- High-level Programming Languages
  : A portable language such as C, C++, Java, or Visual Basic that is composed of words and algebraic
    notation that can be translated by a compiler into assembly language

- Input Device
: A mechanism through which the computer is fed information, such as a keyboard

- Output Device
: A mechanism that conveys the result of a computation to a user, such as a display, or to another computer














